"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8e3],{3283:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(4848),l=t(8453);const s={sidebar_position:5},a="Shell",o={id:"official-plugins/shell",title:"Shell",description:"Introduction",source:"@site/docs/official-plugins/shell.md",sourceDirName:"official-plugins",slug:"/official-plugins/shell",permalink:"/docs/docs/official-plugins/shell",draft:!1,unlisted:!1,editUrl:"https://github.com/nodesteram-proj/docs/tree/main/packages/create-docusaurus/templates/shared/docs/official-plugins/shell.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Software Bill of Materials (SBOM)",permalink:"/docs/docs/official-plugins/sbom"},next:{title:"Reference",permalink:"/docs/docs/category/reference"}},r={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Maturity",id:"maturity",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Usage",id:"usage",level:2},{value:"Extracting JSON from a shell command",id:"extracting-json-from-a-shell-command",level:3},{value:"Reading Files that are generated by the shell command",id:"reading-files-that-are-generated-by-the-shell-command",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"shell",children:"Shell"}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(n.p,{children:"The shell plugin allows you to run shell commands as part of your nodestream pipeline.\nFrom the results of the shell command, you can then use the output to process further in the pipeline."}),"\n",(0,i.jsx)(n.h2,{id:"maturity",children:"Maturity"}),"\n",(0,i.jsxs)(n.p,{children:["This plugin is currently in ",(0,i.jsx)(n.strong,{children:"STABLE"})," and should be fine for production use."]}),"\n",(0,i.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,i.jsx)(n.p,{children:"Currently, there are no major pre-requisites for this plugin."}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsx)(n.p,{children:"Currently this plugin features to run shell commands with the following features:"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Run shell commands"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Use the output of the shell command in the pipeline"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"To install the shell plugin, run the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install nodestream-plugin-shell\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"No configuration is needed for this plugin outside of its usage in the pipeline."}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"extracting-json-from-a-shell-command",children:"Extracting JSON from a shell command"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'- implementation: nodestream_plugin_shell:Shell\n  arguments:\n    command: curl\n    arguments:\n      - https://example.com/api/data/json\n    options: \n      X: GET\n      header: "Accept: application/json"\n    ignore_stdout: false #Provide json output from command to next step in pipeline.\n'})}),"\n",(0,i.jsx)(n.p,{children:"This is roughly equivalent to the following shell command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl https://example.com/api/data.json -X GET --header "Accept: application/json"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"reading-files-that-are-generated-by-the-shell-command",children:"Reading Files that are generated by the shell command"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'- implementation: nodestream_plugin_shell:Shell\n  arguments:\n    command: curl\n    arguments:\n      - https://example.com/api/data.json\n    options: \n      X: GET\n      header: "Accept: application/json"\n    flags: \n      - O\n    ignore_stdout: true #Do not provide output from command to next step in pipeline.\n\n- implementation: nodestream.pipeline.extractors:FileExtractor\n  arguments:\n    globs:\n    - data.json\n'})}),"\n",(0,i.jsx)(n.p,{children:"This is roughly equivalent to the following shell command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl https://example.com/api/data.json -X GET --header "Accept: application/json" -O\ncat data.json\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const l={},s=i.createContext(l);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);