"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[471],{3221:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=t(4848),a=t(8453);const s={sidebar_position:2},r="Managing Your Project",i={id:"tutorial-basics/managing-your-project",title:"Managing Your Project",description:"Examine, add, and remove pipelines.",source:"@site/docs/tutorial-basics/managing-your-project.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/managing-your-project",permalink:"/docs/docs/tutorial-basics/managing-your-project",draft:!1,unlisted:!1,editUrl:"https://github.com/nodesteram-proj/docs/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/managing-your-project.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Create A Project",permalink:"/docs/docs/tutorial-basics/create-a-new-project"},next:{title:"Create A New Pipeline",permalink:"/docs/docs/tutorial-basics/create-a-new-pipeline"}},c={},l=[{value:"Viewing the State of Your Project",id:"viewing-the-state-of-your-project",level:2},{value:"Removing a Pipeline",id:"removing-a-pipeline",level:2},{value:"Adding a Pipeline",id:"adding-a-pipeline",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"managing-your-project",children:"Managing Your Project"}),"\n",(0,o.jsx)(n.p,{children:"Examine, add, and remove pipelines."}),"\n",(0,o.jsx)(n.p,{children:"In this tutorial, we'll walk you through managing your Nodestream project."}),"\n",(0,o.jsx)(n.h2,{id:"viewing-the-state-of-your-project",children:"Viewing the State of Your Project"}),"\n",(0,o.jsxs)(n.p,{children:["To view the state of your project, cd into the project repository and use the ",(0,o.jsx)(n.code,{children:"nodestream show"})," command.\nThis command will display the state of your project, including the pipelines that are defined."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream show\n"})}),"\n",(0,o.jsx)(n.p,{children:"When you run this command, you'll see output similar to the following:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:"+---------+--------+-----------------------+---------+-------------+\n| scope   | name   | file                  | targets | annotations |\n+---------+--------+-----------------------+---------+-------------+\n| default | sample | pipelines/sample.yaml |         |             |\n+---------+--------+-----------------------+---------+-------------+\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This output shows that there is one pipeline defined in the project.\nYou can filter the output by scope by using the ",(0,o.jsx)(n.code,{children:"--scope"})," option with larger projects."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream show --scope default\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also get a JSON representation of the state of your project by using the ",(0,o.jsx)(n.code,{children:"--json"})," option.\nThis can be useful if you want to use the output in a script or another tool."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream show --json\n"})}),"\n",(0,o.jsx)(n.p,{children:"When you run this command, you'll see output similar to the following:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'["pipelines/sample.yaml"]\n'})}),"\n",(0,o.jsx)(n.p,{children:"Running this command will output a JSON representation of the state of your project like so:"}),"\n",(0,o.jsxs)(n.p,{children:["However, the output can sometimes be too terse to be useful. So you can also add the ",(0,o.jsx)(n.code,{children:"-v"})," option to get a more verbose output."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream show --json -v\n"})}),"\n",(0,o.jsx)(n.p,{children:"When you run this command, you'll see a more detailed JSON representation of the state of your project."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'[{"path": "pipelines/sample.yaml", "name": "sample", "targets": [], "annotations": {}, "exclude_inherited_targets": false}]\n'})}),"\n",(0,o.jsx)(n.h2,{id:"removing-a-pipeline",children:"Removing a Pipeline"}),"\n",(0,o.jsxs)(n.p,{children:["To remove a pipeline from your project, you can use the ",(0,o.jsx)(n.code,{children:"nodestream remove"})," command."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream remove default sample\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This command will remove the pipeline with the name ",(0,o.jsx)(n.code,{children:"sample"})," from the project in the ",(0,o.jsx)(n.code,{children:"default"})," scope.\nYou can confirm that the pipeline was removed by running the ",(0,o.jsx)(n.code,{children:"nodestream show"})," command."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream show\n"})}),"\n",(0,o.jsx)(n.p,{children:"When you run this command, you'll see that the pipeline has been removed from the project."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:"+-------+------+------+---------+-------------+\n| scope | name | file | targets | annotations |\n+-------+------+------+---------+-------------+\n"})}),"\n",(0,o.jsx)(n.h2,{id:"adding-a-pipeline",children:"Adding a Pipeline"}),"\n",(0,o.jsxs)(n.p,{children:["To add a pipeline to your project, you can use the ",(0,o.jsx)(n.code,{children:"nodestream scaffold"})," command."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream scaffold org-chart\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This command will create a new pipeline file called ",(0,o.jsx)(n.code,{children:"org-chart.yaml"})," in the ",(0,o.jsx)(n.code,{children:"pipelines"})," directory of your project."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# org-chart.yaml\n- arguments:\n    stop: 100000\n  factory: range\n  implementation: nodestream.pipeline:IterableExtractor\n- arguments:\n    interpretations:\n    - key:\n        number: !jmespath 'index'\n      node_type: Number\n      type: source_node\n  implementation: nodestream.interpreting:Interpreter\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can confirm that the pipeline was added by running the ",(0,o.jsx)(n.code,{children:"nodestream show"})," command."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nodestream show\n"})}),"\n",(0,o.jsx)(n.p,{children:"When you run this command, you'll see that the pipeline has been added to the project."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-plaintext",children:"+---------+-----------+--------------------------+---------+-------------+\n| scope   | name      | file                     | targets | annotations |\n+---------+-----------+--------------------------+---------+-------------+\n| default | org-chart | pipelines/org-chart.yaml |         |             |\n+---------+-----------+--------------------------+---------+-------------+\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(6540);const a={},s=o.createContext(a);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);