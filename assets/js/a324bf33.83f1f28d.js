"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4583],{9242:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=i(4848),t=i(8453);const o={sidebar_position:4},r="Software Bill of Materials (SBOM)",a={id:"official-plugins/sbom",title:"Software Bill of Materials (SBOM)",description:"An opinionated plugin for loading Software Bill of Materials (SBOM)",source:"@site/docs/official-plugins/sbom.md",sourceDirName:"official-plugins",slug:"/official-plugins/sbom",permalink:"/docs/docs/official-plugins/sbom",draft:!1,unlisted:!1,editUrl:"https://github.com/nodesteram-proj/docs/tree/main/packages/create-docusaurus/templates/shared/docs/official-plugins/sbom.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Pedantic",permalink:"/docs/docs/official-plugins/pedantic"},next:{title:"Shell",permalink:"/docs/docs/official-plugins/shell"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Maturity",id:"maturity",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Local SBOM files",id:"local-sbom-files",level:3},{value:"Github Repositories",id:"github-repositories",level:3},{value:"Using it with Amazon Inspector",id:"using-it-with-amazon-inspector",level:3},{value:"Usage",id:"usage",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"software-bill-of-materials-sbom",children:"Software Bill of Materials (SBOM)"}),"\n",(0,s.jsx)(n.p,{children:"An opinionated plugin for loading Software Bill of Materials (SBOM)"}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["Nodestream plugin to import SBOM files in JSON formatted ",(0,s.jsx)(n.a,{href:"https://cyclonedx.org/",children:"CycloneDX"})," and ",(0,s.jsx)(n.a,{href:"https://spdx.dev/",children:"SPDX"})," into an opinionated graph data model in a graph database. Nodestream is a developer friendly Python framework for materializing and working with graph databases."]}),"\n",(0,s.jsx)(n.h2,{id:"maturity",children:"Maturity"}),"\n",(0,s.jsxs)(n.p,{children:["This plugin is currently is ",(0,s.jsx)(n.strong,{children:"PREVIEW"})," and should not be for production without sufficient testing."]}),"\n",(0,s.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,s.jsx)(n.p,{children:"There are no pre-requisites to use the SBOM plugin aside from having a project to use it with."}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(n.p,{children:"The SBOM plugin currently supports the following features:"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","An opinionanted graph data model for SBOM data analysis"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Support for JSON formatted ",(0,s.jsx)(n.a,{href:"https://cyclonedx.org/",children:"CycloneDX"})," and ",(0,s.jsx)(n.a,{href:"https://spdx.dev/",children:"SPDX"})," data files"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Automated download of SBOM files from Github and import them into a graph"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","Automated export of SBOM files from ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/inspector/",children:"Amazon Inspector"})," and import them into a graph"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"To install the SBOM plugin, run the following command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install nodestream-plugin-sbom\n"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The SBOM plugin comes with three pre-configured pipelines:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sbom"})," - This will import SBOM files from a local directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sbom_github"})," - This will export SBOM files from the provided Github repo and import them into a graph database"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sbom_amazon_inspector"})," - This will export SBOM files using ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/inspector/",children:"Amazon Inspector"})," and import them into a graph database"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Once installed you will need to add some configuration depending on which pipeline you want to run:"}),"\n",(0,s.jsx)(n.h3,{id:"local-sbom-files",children:"Local SBOM files"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"nodestream.yaml"})," configuration"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"plugins:\n- name: sbom\n  config:\n    paths: <The local directory or file with SBOM files to import>\n\ntargets:\n  my-db:\n    database: neptune\n    graph_id: <YOUR GRAPH ID>\n    mode: analytics\n"})}),"\n",(0,s.jsx)(n.p,{children:"To run the pipeline:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"nodestream run sbom --target my-db -v\n"})}),"\n",(0,s.jsx)(n.h3,{id:"github-repositories",children:"Github Repositories"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"nodestream.yaml"})," configuration"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"plugins:\n- name: sbom\n  config:\n    repos: [A list of owner/repos to import e.g. nodestream-proj/nodestream]\n\ntargets:\n  my-db:\n    database: neptune\n    graph_id: <YOUR GRAPH ID>\n    mode: analytics\n"})}),"\n",(0,s.jsx)(n.p,{children:"To run the pipeline:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"nodestream run sbom_github --target my-db -v\n"})}),"\n",(0,s.jsx)(n.h3,{id:"using-it-with-amazon-inspector",children:"Using it with Amazon Inspector"}),"\n",(0,s.jsx)(n.p,{children:"To use this the Amazon Inspector pipeline you must provide"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"nodestream.yaml"})," configuration"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"plugins:\n- name: sbom\n  config:\n    bucketName: <S3 Bucket Name>\n    keyPrefix: <S3 Bucket Key Prefix>\n    kmsKeyArn: <KMS Key ARN>\n\ntargets:\n  my-db:\n    database: neptune\n    graph_id: <YOUR GRAPH ID>\n    mode: analytics\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"To run the pipeline:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"nodestream run sbom --target my-db -v\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);