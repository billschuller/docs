"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7780],{844:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>u});var a=t(4848),s=t(8453),r=t(9489),o=t(7227);const i={sidebar_position:3},l="Extending the CLI",d={id:"tutorials-advanced/extending-the-cli",title:"Extending the CLI",description:"The Nodestream CLI is built to be extensible.",source:"@site/docs/tutorials-advanced/extending-the-cli.mdx",sourceDirName:"tutorials-advanced",slug:"/tutorials-advanced/extending-the-cli",permalink:"/docs/docs/tutorials-advanced/extending-the-cli",draft:!1,unlisted:!1,editUrl:"https://github.com/nodesteram-proj/docs/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials-advanced/extending-the-cli.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Building a Plugin",permalink:"/docs/docs/tutorials-advanced/building-plugins"},next:{title:"Extending the DSL",permalink:"/docs/docs/tutorials-advanced/extending-the-dsl"}},c={},u=[{value:"Audits",id:"audits",level:2},{value:"Creating an Audit",id:"creating-an-audit",level:3},{value:"Registering an Audit",id:"registering-an-audit",level:3},{value:"Running an Audit",id:"running-an-audit",level:3},{value:"Creating a Command",id:"creating-a-command",level:2},{value:"Creating a Command",id:"creating-a-command-1",level:3},{value:"Registering a Command",id:"registering-a-command",level:3},{value:"Running a Command",id:"running-a-command",level:3}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"extending-the-cli",children:"Extending the CLI"}),"\n",(0,a.jsxs)(n.p,{children:["The Nodestream CLI is built to be extensible.\nYou can add new functionality to the CLI to suit your development needs.\nYou can either include these customizations an a ",(0,a.jsx)(n.a,{href:"../building-plugins",children:"plugin"})," or as a part of your own codebase."]}),"\n",(0,a.jsx)(n.h2,{id:"audits",children:"Audits"}),"\n",(0,a.jsx)(n.p,{children:"Audits are a way to run a series checks on your project.\nFor instance, you can build an audit to check that naming conventions are being followed, or that certain fields are present in your data."}),"\n",(0,a.jsx)(n.h3,{id:"creating-an-audit",children:"Creating an Audit"}),"\n",(0,a.jsxs)(n.p,{children:["Audits are implemented as a class that inherits from ",(0,a.jsx)(n.code,{children:"nodestream.project.audits:Audit"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from nodestream.project import Project\nfrom nodestream.project.audits import Audit\n\nclass MyAudit(Audit):\n    name = "my-audit"\n\n    async def run(self, project: Project):\n        # Your audit logic here\n        pass\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Audit"})," base class has several methods that you can call to report the results of your audit."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"self.success(message: str)"})," - Report a successful audit finding"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"self.failure(message: str)"})," - Report a failed audit finding"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"self.warning(message: str)"})," - Report a warning audit finding"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"For example, you can check that a certain field is present in every type definition in your schema:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from nodestream.project import Project\n\nclass FieldPresenceAudit(Audit):\n    name = "field-presence"\n    description = "Check that a certain field is present in every type definition"\n\n    async def run(self, project: Project):\n        schema = project.get_schema()\n        for node_type in schema.node_types:\n            if "my_field" not in node_type.properties:\n                self.failure(f"Field \'my_field\' is missing from {node_type.name}")\n\n        if self.failure_count == 0:\n            self.success("All node types have the \'my_field\' field")\n'})}),"\n",(0,a.jsx)(n.h3,{id:"registering-an-audit",children:"Registering an Audit"}),"\n",(0,a.jsxs)(n.p,{children:["Audits are registered via the ",(0,a.jsx)(n.a,{href:"https://setuptools.pypa.io/en/latest/userguide/entry_point.html#entry-points-for-plugins",children:"entry_points"})," API of a Python Package.\nSpecifically, the ",(0,a.jsx)(n.code,{children:"entry_point"})," named ",(0,a.jsx)(n.code,{children:"audits"})," inside of the ",(0,a.jsx)(n.code,{children:"nodestream.plugins"})," group is loaded.\nThe entry point provided should be a module which has atleast one subclass of ",(0,a.jsx)(n.code,{children:"nodestream.project.audits:Audit"})," as directed above.\nEach subclass will be registered as an audit. The ",(0,a.jsx)(n.code,{children:"name"})," attribute of the class will be used as the name of the audit."]}),"\n",(0,a.jsx)(n.p,{children:"Depending on how you are building your package, you can register your audit plugin in one of the following ways:"}),"\n",(0,a.jsxs)(r.A,{defaultValue:"pyproject",values:[{label:"pyproject.toml",value:"pyproject"},{label:"poetry",value:"poetry"},{label:"setup.cfg",value:"setup-cfg"},{label:"setup.py",value:"setup-py"}],children:[(0,a.jsx)(o.A,{value:"pyproject",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-toml",children:'[project.entry-points."nodestream.plugins"]\naudits = "my_python_package.audits"\n'})})}),(0,a.jsx)(o.A,{value:"poetry",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-toml",children:'[tool.poetry.plugins."nodestream.plugins"]\naudits = "my_python_package.audits"\n'})})}),(0,a.jsx)(o.A,{value:"setup-cfg",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ini",children:"[options.entry_points]\nnodestream.plugins =\n    audits = my_python_package.audits\n"})})}),(0,a.jsx)(o.A,{value:"setup-py",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from setuptools import setup\n\nsetup(\n    # ...,\n    entry_points = {\n        'nodestream.plugins': [\n            'audits = nodestream_plugin_cool.audits',\n        ]\n    }\n)\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"running-an-audit",children:"Running an Audit"}),"\n",(0,a.jsxs)(n.p,{children:["Once you have registered your audit, you can run it using the ",(0,a.jsx)(n.code,{children:"nodestream audit"})," command."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nodestream audit my-audit\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"You must run the command from an environment that has your package installed so that the entry point is registered."})}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-command",children:"Creating a Command"}),"\n",(0,a.jsxs)(n.p,{children:["Commands are a more general way to extend the CLI.\nYou can create a command to perform any action you need.\nCommands are built on top of ",(0,a.jsx)(n.a,{href:"https://cleo.readthedocs.io/en/latest/",children:"cleo"}),", a Python package for building command-line applications."]}),"\n",(0,a.jsx)(n.h3,{id:"creating-a-command-1",children:"Creating a Command"}),"\n",(0,a.jsxs)(n.p,{children:["Commands are implemented as a class that inherits from ",(0,a.jsx)(n.code,{children:"nodestream.cli:NodestreamCommand"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from cleo.helpers import option\n\nfrom nodestream.cli import NodestreamCommand\n\nclass MyCommand(NodestreamCommand):\n    name = "my-command"\n    description = "My custom command"\n    options = [option("my-option", None, "My custom option")]\n\n    async def handle_async(self):\n        # Your command logic here\n        pass\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Similar to audits, you may want to work with the project in your command.\nAccess to the project is provided via the ",(0,a.jsx)(n.code,{children:"get_project"})," method.\nYou will have to add the project option to your command to allow users to override the project path."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from nodestream.cli import NodestreamCommand\nfrom nodestream.cli.commands.shared_options import PROJECT_FILE_OPTION\n\nclass MyCommand(NodestreamCommand):\n    name = "my-command"\n    description = "My custom command"\n    options = [PROJECT_FILE_OPTION]\n\n    async def handle_async(self):\n        project = self.get_project()\n        # Your command logic here\n        pass\n'})}),"\n",(0,a.jsx)(n.h3,{id:"registering-a-command",children:"Registering a Command"}),"\n",(0,a.jsxs)(n.p,{children:["Commands are registered via the ",(0,a.jsx)(n.a,{href:"https://setuptools.pypa.io/en/latest/userguide/entry_point.html#entry-points-for-plugins",children:"entry_points"})," API of a Python Package.\nSpecifically, the ",(0,a.jsx)(n.code,{children:"entry_point"})," named ",(0,a.jsx)(n.code,{children:"commands"})," inside of the ",(0,a.jsx)(n.code,{children:"nodestream.plugins"})," group is loaded.\nThe entry point provided should be a module which has atleast one subclass of ",(0,a.jsx)(n.code,{children:"nodestream.cli:NodestreamCommand"})," as directed above.\nEach subclass will be registered as a command."]}),"\n",(0,a.jsx)(n.p,{children:"Depending on how you are building your package, you can register your commands plugin in one of the following ways:"}),"\n",(0,a.jsxs)(r.A,{defaultValue:"pyproject",values:[{label:"pyproject.toml",value:"pyproject"},{label:"poetry",value:"poetry"},{label:"setup.cfg",value:"setup-cfg"},{label:"setup.py",value:"setup-py"}],children:[(0,a.jsx)(o.A,{value:"pyproject",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-toml",children:'[project.entry-points."nodestream.plugins"]\ncommands = "my_python_package.commands"\n'})})}),(0,a.jsx)(o.A,{value:"poetry",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-toml",children:'[tool.poetry.plugins."nodestream.plugins"]\ncommands = "my_python_package.commands"\n'})})}),(0,a.jsx)(o.A,{value:"setup-cfg",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ini",children:"[options.entry_points]\nnodestream.plugins =\n    commands = my_python_package.commands\n"})})}),(0,a.jsx)(o.A,{value:"setup-py",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from setuptools import setup\n\nsetup(\n    # ...,\n    entry_points = {\n        'nodestream.plugins': [\n            'commands = nodestream_plugin_cool.commands',\n        ]\n    }\n)\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"running-a-command",children:"Running a Command"}),"\n",(0,a.jsxs)(n.p,{children:["Once you have registered your command, you can run it using the ",(0,a.jsx)(n.code,{children:"nodestream"})," command."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nodestream my-command\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"You must run the command from an environment that has your package installed so that the entry point is registered."})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},7227:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var a=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,o),hidden:t,children:n})}},9489:(e,n,t)=>{t.d(n,{A:()=>_});var a=t(6540),s=t(4164),r=t(4245),o=t(6347),i=t(6494),l=t(2814),d=t(5167),c=t(1269);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:s}}=e;return{value:n,label:t,attributes:a,default:s}}))}(t);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const s=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=m(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[d,u]=h({queryString:t,groupId:s}),[g,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,c.Dv)(t);return[s,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),f=(()=>{const e=d??g;return p({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),y(e)}),[u,y,r]),tabValues:r}}var y=t(1062);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function x(e){let{className:n,block:t,selectedValue:a,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),s=i[t].value;s!==a&&(d(n),o(s))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...r,className:(0,s.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function b(e){const n=g(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,j.jsx)(x,{...e,...n}),(0,j.jsx)(v,{...e,...n})]})}function _(e){const n=(0,y.A)();return(0,j.jsx)(b,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);